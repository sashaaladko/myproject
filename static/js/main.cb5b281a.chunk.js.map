{"version":3,"sources":["firebase/config.js","login.js","search.js","hooks/useStorage.js","comps/ProgressBar.jsx","comps/UploadForm.jsx","hooks/useFirestore.js","comps/ImageGrid.jsx","home.jsx","about.jsx","folders/folder1.js","folders/folder2.js","folders/folder3.js","App.jsx","index.js"],"names":["fire","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","className","type","autoFocus","required","value","onChange","e","target","onClick","Search","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","style","width","UploadForm","types","selected","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","src","alt","Home","About","Folder1","Folder2","Folder3","App","user","setUser","setEmailError","setPasswordError","clearErrors","handleLogout","auth","signOut","onAuthStateChanged","href","path","element","signInWithEmailAndPassword","catch","code","message","createUserWithEmailAndPassword","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb5b281a.chunk.js","sourcesContent":["\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBCVtYuVcpDkr1Qq08VwOS36-L8vHVljgU\",\r\n    authDomain: \"forreact-d2eae.firebaseapp.com\",\r\n    databaseURL: \"https://forreact-d2eae-default-rtdb.firebaseio.com\",\r\n    projectId: \"forreact-d2eae\",\r\n    storageBucket: \"forreact-d2eae.appspot.com\",\r\n    messagingSenderId: \"504176096587\",\r\n    appId: \"1:504176096587:web:963fa501c15d936e4264ce\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp };\r\n\r\nexport default fire;","import React from 'react';\r\nimport './logreg.css';\r\n\r\n\r\nconst Login = (props) => {\r\n    const { email, setEmail, password, setPassword, handleLogin, handleSignup,  hasAccount, setHasAccount, emailError, passwordError } = props;\r\n    \r\n\r\n    return(\r\n        <section className=\"login\">\r\n            <div className=\"loginContainer\">\r\n                <label>email</label>\r\n                <input type=\"text\" autoFocus required value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                <p className=\"errorMsg\">{emailError}</p>\r\n                <label>password</label>\r\n                <input type=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                <p className=\"errorMsg\">{passwordError}</p>\r\n                <div className='btnContainer'>\r\n                    {hasAccount ? (\r\n                        <>\r\n                        <button className='logregbtn' onClick={handleLogin}>sign in</button>\r\n                        <p>Dont have an account? <span onClick={() => setHasAccount(!hasAccount)}>Signup</span></p>\r\n                        </>\r\n                    ):(\r\n                        <>\r\n                        <button className='logregbtn' onClick={handleSignup}>sign up</button>\r\n                        <p>have an account? <span onClick={() => setHasAccount(!hasAccount)}>sign in</span></p>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\n\r\nconst Search = () => {\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n cool\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;","import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection('images');\r\n    \r\n    storageRef.put(file).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n      const url = await storageRef.getDownloadURL();\r\n      const createdAt = timestamp();\r\n      await collectionRef.add({ url, createdAt });\r\n      setUrl(url);\r\n    });\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { progress, url } = useStorage(file);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n\r\n  return (\r\n    <div className=\"progress-bar\" style ={{ width: progress+'%'}}></div>\r\n  );\r\n} \r\n\r\nexport default ProgressBar;","import React, { useState } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = ( ) => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const types = ['image/png', 'image/jpeg'];\r\n\r\n  const handleChange = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError('');\r\n    } else {\r\n      setFile(null);\r\n      setError('Please select an image file (png or jpg)');\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n   \r\n      <form className='imgform'>\r\n       \r\n        <label className='imglabel'>\r\n          <input type=\"file\" onChange={handleChange} />\r\n          <span>+</span>\r\n        </label>\r\n        <div className=\"output\">\r\n          { error && <div className=\"error\">{ error }</div>}\r\n          { file && <div>{ file.name }</div> }\r\n          { file && <ProgressBar file={file} setFile={setFile} /> }\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadForm;","import { useState, useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore.collection(collection)\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot(snap => {\r\n        let documents = [];\r\n        snap.forEach(doc => {\r\n          documents.push({...doc.data(), id: doc.id});\r\n        });\r\n        setDocs(documents);\r\n      });\r\n\r\n    return () => unsub();\r\n  }, [collection]);\r\n\r\n  return { docs };\r\n}\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\n\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { docs } = useFirestore('images');\r\n\r\n  return (\r\n    <div className=\"img-grid\">\r\n      { docs && docs.map(doc => (\r\n        <div className=\"img-wrap\" key={doc.id}\r\n        onClick={() => setSelectedImg(doc.url)}>\r\n          <img src={doc.url} alt=\"uploaded pic\"/>\r\n          </div>\r\n      ))}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react';\r\nimport UploadForm from './comps/UploadForm';\r\nimport ImageGrid from './comps/ImageGrid';\r\nimport './imgform.css';\r\n\r\nconst Home = (setSelectedImg) => {\r\n\r\n  return (\r\n      <div>\r\n\r\n        <UploadForm />\r\n        <ImageGrid setSelectedImg={setSelectedImg} />\r\n        \r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\n\r\nconst About = () => {\r\n\r\n\r\n\r\n  return (\r\n    <div className='about'>\r\n        <h1>About us</h1>\r\n        <p>\r\n            This site was made as laboratory work number 6. \r\n            It is a photo gallery where you can upload photos, with authorization and registration implemented. \r\n            User data is stored in Firebase database and all uploaded photos are stored in Firebase Storage. \r\n        </p>\r\n        <h2>I hope you like it!</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\nimport UploadForm from '../comps/UploadForm';\r\nimport ImageGrid from '../comps/ImageGrid';\r\nimport '../imgform.css';\r\n\r\nconst Folder1 = ( setSelectedImg) => {\r\n\r\n  return (\r\n      <div>\r\n          <h1 className='folder'>folder1</h1>\r\n        <UploadForm />\r\n        <ImageGrid setSelectedImg={setSelectedImg} />\r\n        \r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Folder1;","import React from 'react';\r\nimport UploadForm from '../comps/UploadForm';\r\nimport ImageGrid from '../comps/ImageGrid';\r\nimport '../imgform.css';\r\n\r\nconst Folder2 = ( setSelectedImg) => {\r\n\r\n  return (\r\n      <div>\r\n          <h1 className='folder'>folder2</h1>\r\n        <UploadForm />\r\n        <ImageGrid setSelectedImg={setSelectedImg} />\r\n        \r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Folder2;","import React from 'react';\r\nimport UploadForm from '../comps/UploadForm';\r\nimport ImageGrid from '../comps/ImageGrid';\r\nimport '../imgform.css';\r\n\r\nconst Folder3 = ( setSelectedImg) => {\r\n\r\n  return (\r\n      <div>\r\n          <h1 className='folder'>folder3</h1>\r\n        <UploadForm />\r\n        <ImageGrid setSelectedImg={setSelectedImg} />\r\n        \r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Folder3;","import React, { useState, useEffect } from 'react';\nimport fire from './firebase/config'\nimport Login from './login';\nimport './App.css';\nimport Search from './search';\nimport { Route, Routes } from 'react-router-dom';\nimport Home from './home';\nimport About from './about';\nimport Folder1 from './folders/folder1';\nimport Folder2 from './folders/folder2';\nimport Folder3 from './folders/folder3';\n\nfunction App() {\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n\n  \n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  }\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  const handleLogin = () => {\n    clearErrors();\n      fire.auth().signInWithEmailAndPassword(email,password).catch((err) => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n\n        }\n      });\n  };\n\n  const handleSignup = () => {\n    clearErrors();\n    fire.auth().createUserWithEmailAndPassword(email,password).catch((err) => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n\n\n\n  useEffect(() => {\n    function authListener() {\n      fire.auth().onAuthStateChanged((user) => {\n        if(user){\n          clearInputs();\n          setUser(user);\n        } else {\n          setUser(\"\");\n        }\n     });\n    };\n    authListener();\n  }, []);\n\n\n   \n  return (\n    <div className=\"App\">\n\n     \n      {user ? (\n        <div>\n        <header>\n        <button className='logout' onClick={handleLogout}>log out</button>\n          <ul className='list'>\n            <li><a className=\"hrefs\" href=\"/\">Home page</a></li>\n            <li><a className=\"hrefs\" href=\"/search\">search</a></li>\n            <li><a className=\"hrefs\" href=\"/about\">About</a></li>\n          </ul>\n          <ul className='folders'>\n            <li><a className='folderlist' href=\"/folder1\">folder1</a></li>\n            <li><a className='folderlist' href=\"/folder2\">folder2</a></li>\n            <li><a className='folderlist' href=\"/folder3\">folder3</a></li>\n          </ul>\n\n        </header>\n        <Routes>\n          <Route path='/' element={<Home handleLogout={handleLogout}/>}/>\n          <Route path='/search' element={<Search/>}/>\n          <Route path='/about' element={<About/>}/>\n          <Route path='/folder1' element={<Folder1/>}/>\n          <Route path='/folder2' element={<Folder2/>}/>\n          <Route path='/folder3' element={<Folder3/>}/>\n        </Routes>\n\n        </div>\n      ) : ( <Login email={email} setEmail={setEmail} password={password} setPassword={setPassword} handleLogin={handleLogin} handleSignup={handleSignup} hasAccount={hasAccount} setHasAccount={setHasAccount} emailError={emailError} passwordError={passwordError}/>)}\n  \n     \n      \n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}