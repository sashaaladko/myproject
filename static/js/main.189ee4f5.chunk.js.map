{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","style","width","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","onClick","src","alt","Modal","selectedImg","classList","contains","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.189ee4f5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>Photo Gallery</h1>\n      <h2>Your Pictures</h2>\n    </div>\n  )\n}\n\nexport default Title;","\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBCVtYuVcpDkr1Qq08VwOS36-L8vHVljgU\",\r\n    authDomain: \"forreact-d2eae.firebaseapp.com\",\r\n    databaseURL: \"https://forreact-d2eae-default-rtdb.firebaseio.com\",\r\n    projectId: \"forreact-d2eae\",\r\n    storageBucket: \"forreact-d2eae.appspot.com\",\r\n    messagingSenderId: \"504176096587\",\r\n    appId: \"1:504176096587:web:963fa501c15d936e4264ce\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection('images');\r\n    \r\n    storageRef.put(file).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n      const url = await storageRef.getDownloadURL();\r\n      const createdAt = timestamp();\r\n      await collectionRef.add({ url, createdAt });\r\n      setUrl(url);\r\n    });\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { progress, url } = useStorage(file);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n\r\n  return (\r\n    <div className=\"progress-bar\" style ={{ width: progress+'%'}}></div>\r\n  );\r\n} \r\n\r\nexport default ProgressBar;","import React, { useState } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const types = ['image/png', 'image/jpeg'];\r\n\r\n  const handleChange = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError('');\r\n    } else {\r\n      setFile(null);\r\n      setError('Please select an image file (png or jpg)');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <label>\r\n        <input type=\"file\" onChange={handleChange} />\r\n        <span>+</span>\r\n      </label>\r\n      <div className=\"output\">\r\n        { error && <div className=\"error\">{ error }</div>}\r\n        { file && <div>{ file.name }</div> }\r\n        { file && <ProgressBar file={file} setFile={setFile} /> }\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default UploadForm;","import { useState, useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore.collection(collection)\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot(snap => {\r\n        let documents = [];\r\n        snap.forEach(doc => {\r\n          documents.push({...doc.data(), id: doc.id});\r\n        });\r\n        setDocs(documents);\r\n      });\r\n\r\n    return () => unsub();\r\n    // this is a cleanup function that react will run when\r\n    // a component using the hook unmounts\r\n  }, [collection]);\r\n\r\n  return { docs };\r\n}\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\n\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { docs } = useFirestore('images');\r\n\r\n  return (\r\n    <div className=\"img-grid\">\r\n      { docs && docs.map(doc => (\r\n        <div className=\"img-wrap\" key={doc.id}\r\n        onClick={() => setSelectedImg(doc.url)}>\r\n          <img src={doc.url} alt=\"uploaded pic\"/>\r\n          </div>\r\n      ))}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react';\r\n\r\n\r\nconst Modal = ({ setSelectedImg, selectedImg }) => {\r\n\r\n  const handleClick = (e) => {\r\n    if (e.target.classList.contains('backdrop')) {\r\n      setSelectedImg(null);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"backdrop\" onClick={handleClick}>\r\n      <img src={selectedImg} alt=\"enlarged pic\"/>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}